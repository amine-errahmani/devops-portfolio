# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi


# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    git
    zsh-autosuggestions
)

ZSH_DISABLE_COMPFIX=true

source $ZSH/oh-my-zsh.sh
source ~/.kubelogin_completion

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

ZSH_DISABLE_COMPFIX=true

# add path for flutter
export PATH="$PATH:/Users/amine/Library/flutter/bin"

# add path for python
export PATH="$PATH:/Users/amine/Library/Python/3.9/bin"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

bindkey "[D" backward-word
bindkey "[C" forward-word
bindkey "^[a" beginning-of-line
bindkey "^[e" end-of-line

autoload -U +X bashcompinit && bashcompinit
source /usr/local/etc/bash_completion.d/az

autoload -Uz compinit
compinit

compdef __start_kubectl k
source <(kubectl completion zsh)

export TERM=xterm-256color


# Aliases
alias k=kubectl
alias kg='kubectl get'
alias kd='kubectl describe'
alias kdp='kubectl describe pod'
alias kgp='kubectl get pods'
alias kgs="kubectl get service" 
alias kgi="kubectl get Ingress"
alias kev="kubectl get events"
alias ns=kubens
alias ctx=kubectx
alias s='source ~/.zshrc' 
alias watch='watch '
alias c='clear'
alias gpl='git pull'
alias gpsh='git push'
alias gfp='git fetch --prune'
alias gba='git branch -a'
alias gbd='git branch -d'
alias gbD='git branch -D'
alias gencom='curl -s https://whatthecommit.com/index.txt'
[ -f ~/.kubectl_aliases ] && source ~/.kubectl_aliases

#k9s home folder variable
export XDG_CONFIG_HOME='/Users/amine/Library/Application Support'

function kx () {
    cur_ctx=$(kubectx -c)
    cur_ns=$(kubens -c)
    echo "current ctx/ns : $cur_ctx / $cur_ns"
}

function hg () {
   history | grep -i $1
}

function fg () {
   find . | grep $1
}

#list versions of softwares
function v() {
   git --version   
   az --version 2>&1 | grep 'azure-cli ' | sed -e 's/                         / /g'
   terraform --version | grep Terraform | grep -vwE "(out of date)"
   terragrunt --version
   vault --version
   echo -n "Packer v"
   packer --version 
}

function b64d() {
   echo -n $1 | base64 --decode
}

function b64() {
   echo -n $1 | base64 
}

function vault-root() {

    echo "Setting Vault token as root token"
    export VAULT_TOKEN=$root_VAULT_TOKEN

}

function vault-unroot() {

    echo "Setting Vault token as personal token"
    export VAULT_TOKEN=$personal_VAULT_TOKEN

}