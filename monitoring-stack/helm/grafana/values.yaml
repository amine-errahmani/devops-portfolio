rbac:
  create: true
  pspEnabled: false
  pspUseAppArmor: false
  namespaced: false
  extraRoleRules: []
  extraClusterRoleRules: []

serviceAccount:
  create: true
  name:
  nameTest:
  autoMount: true

replicas: 1

headlessService: false

autoscaling:
  enabled: false

podDisruptionBudget: {}

deploymentStrategy:
  type: Recreate

readinessProbe:
  httpGet:
    path: /api/health
    port: 3000

livenessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 60
  timeoutSeconds: 30
  failureThreshold: 10

image:
  repository: grafana/grafana
  tag: 9.1.6
  sha: ""
  pullPolicy: IfNotPresent

testFramework:
  enabled: true
  image: "bats/bats"
  tag: "v1.4.1"
  imagePullPolicy: IfNotPresent
  securityContext: {}

securityContext:
  runAsUser: 472
  runAsGroup: 472
  fsGroup: 472

containerSecurityContext:
  capabilities:
    drop: ["NET_RAW"]
  allowPrivilegeEscalation: false

createConfigmap: true

extraConfigmapMounts: []
extraEmptyDirMounts: []
extraLabels: {}

podPortName: grafana

service:
  enabled: true
  type: ClusterIP
  port: 80
  targetPort: 3000
  annotations: {}
  labels: {}
  portName: service
  appProtocol: ""

serviceMonitor:
  enabled: true
  path: /metrics
  labels: {}
  interval: 1m
  scheme: http
  tlsConfig: {}
  scrapeTimeout: 30s
  relabelings: []

extraExposePorts: []
hostAliases: []

ingress:
  enabled: true
  ingressClassName: nginx
  annotations:
    kubernetes.io/tls-app3e: "true"
  labels: {}
  path: /
  pathType: Prefix
  hosts:
    - dashboards.infra.mon
  extraPaths: []
  tls:
    - secretName: grafana-tls 
      hosts:
        - dashboards.infra.mon

resources:
 limits:
   cpu: 500m
   memory: 500Mi
 requests:
   cpu: 100m
   memory: 128Mi

nodeSelector: {}
tolerations: []
affinity: {}
topologySpreadConstraints: []
extraInitContainers: []
extraContainers: ""
extraContainerVolumes: []

persistence:
  type: pvc
  enabled: true
  # storageClassName: ""
  accessModes:
    - ReadWriteMany
  size: 10Gi
  finalizers:
    - kubernetes.io/pvc-protection
  inMemory:
    enabled: false

initChownData:
  enabled: true
  image:
    repository: busybox
    tag: "1.31.1"
    sha: ""
    pullPolicy: IfNotPresent
  resources: {}

admin:
  existingSecret: "grafana-admin"
  userKey: adminuser
  passwordKey: adminpass

env: {}
envValueFrom: {}
envFromSecret: ""
envRenderSecret: {}
envFromSecrets: []
envFromConfigMaps: []

enableServiceLinks: true

extraSecretMounts: []
extraVolumeMounts: []
lifecycleHooks: {}

plugins:
  - camptocamp-prometheus-alertmanager-datasource

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Thanos
        type: prometheus
        access: proxy
        url: http://thanos-query:9090
        isDefault: true
        jsonData:
          timeInterval: 30s
      - name: Prometheus
        type: prometheus
        url: http://monitoring-stack-kube-prom-prometheus.monitoring-stack:9090/
        access: proxy
        jsonData:
          timeInterval: 30s
      - name: Alertmanager
        type: camptocamp-prometheus-alertmanager-datasource
        url: http://monitoring-stack-kube-prom-alertmanager:9093/
      - name: Azure Monitor
        type: grafana-azure-monitor-datasource
        orgId: 1
        typeLogoUrl: public/plugins/grafana-azure-monitor-datasource/img/logo.jpg
        access: proxy
        url: /api/datasources/proxy/2
        isDefault: false
        jsonData:
          cloudName: azuremonitor
          subscriptionId: 
          tenantId: 
          clientId: 
          logAnalyticsDefaultWorkspace: 
          azureLogAnalyticsSameAs: true
          keepCookies: []
        secureJsonData:
          clientSecret: !vault secret/monitoring#azureSDClientSecret
        editable: true
      - name: Loki
        type: loki
        access: proxy
        url: http://loki:3100
        jsonData:
          maxLines: 1000

alerting: {}
notifiers: {}
dashboardProviders: {}
dashboards: {}
dashboardsConfigMaps: {}


grafana.ini:
  # database:
  #   journal_mode: wal
  #   cache_mode: shared
  paths:
    data: /var/lib/grafana/
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  analytics:
    check_for_updates: true
  log:
    mode: console
  grafana_net:
    url: https://grafana.net
  server:
    domain: dashboards.infra.mon
    root_url: https://dashboards.infra.mon/
  auth.basic:
    enabled: true
  auth:   
    disable_login_form: false
  auth.azuread:
    name: Azure AD
    enabled: true
    allow_sign_up: true
    scopes: openid email profile
    auth_url: 
    token_url: 
    client_id: 
    client_secret: !vault secret/monitoring#GrafanaAADClientSecret
    allowed_domains: infra.mon
    allowed_groups:  # space delimited group uids

sidecar:
  image:
    repository: quay.io/kiwigrid/k8s-sidecar
    tag: 1.19.2
    sha: ""
  imagePullPolicy: IfNotPresent
  resources: {}
  securityContext:
    capabilities:
      drop: ["NET_RAW"]
    allowPrivilegeEscalation: false
  enableUniqueFilenames: false
  readinessProbe: {}
  livenessProbe: {}
  dashboards:
    enabled: true
    env: {}
    SCProvider: true
    label: grafana_dashboard
    labelValue: "1"
    folder: /tmp/dashboards
    defaultFolderName: null
    searchNamespace: null
    watchMethod: WATCH
    resource: both
    folderAnnotation: null
    script: null
    provider:
      name: sidecarProvider
      orgid: 1
      type: file
      disableDeletion: false
      allowUiUpdates: true
      updateIntervalSeconds: 30
      path: /tmp/dashboards/
      foldersFromFilesStructure: true
    extraMounts: []
    sizeLimit: {}
  datasources:
    enabled: true
    env: {}
    label: grafana_datasource
    labelValue: "1"
    searchNamespace: null
    watchMethod: WATCH
    resource: both
    reloadURL: "http://localhost:3000/api/admin/provisioning/datasources/reload"
    script: null
    skipReload: false
    initDatasources: false
    sizeLimit: {}
  plugins:
    enabled: false
  notifiers:
    enabled: false


namespaceOverride: ""

revisionHistoryLimit: 10

imageRenderer:
  enabled: false
  
networkPolicy:
  enabled: false

enableKubeBackwardCompatibility: false
useStatefulSet: false
extraObjects: []